/**
 * @package umontreal.ssj.simevents
 *
 * Simulation Clock and Event List Management.
 *
 * This package provides the simulation clock and tools to manage the
 * future events list.  These are the basic tools for discrete-event
 * simulation.  Several different implementations of the event list are
 * offered.  Some basic tools for continuous simulation (i.e., solving
 * differential equations with respect to time) are also provided.
 *
 *  @anchor REF_simevents_overview_sec_overview
 *
 *  This package provides the simulation clock and tools to manage the future
 * events list. These are the basic tools for discrete-event simulation.
 * Several different implementations of the event list are offered. Some
 * basic tools for continuous simulation (i.e., solving differential
 * equations with respect to time) are also provided.
 *
 * The scheduling part of discrete-event simulations is managed by the
 * "chief-executive" class  @ref umontreal.ssj.simevents.Simulator, which
 * contains the simulation clock and the central monitor. The event list is
 * taken from one of the implementations of the interface
 * @ref umontreal.ssj.simevents.eventlist.EventList, which provide different
 * kinds of event list implementations. One can change the default
 * @ref umontreal.ssj.simevents.eventlist.SplayTree event list implementation
 * via the method  umontreal.ssj.simevents.Sim.init(EventList). The class
 * @ref umontreal.ssj.simevents.Event provides the facilities for creating
 * and scheduling events in the simulation. Each type of event must be
 * defined by extending the class  @ref umontreal.ssj.simevents.Event. The
 * class  @ref umontreal.ssj.simevents.Continuous provides elementary tools
 * for continuous simulation, where certain variables vary continuously in
 * time according to ordinary differential equations.
 *
 * The class  @ref umontreal.ssj.simevents.LinkedListStat implements *doubly
 * linked* lists, with tools for inserting, removing, and viewing objects in
 * the list, and automatic statistical collection. These lists can contain
 * any kind of  Object.
 */